/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package swagger.codegen.api;

import swagger.codegen.api.model.Employee;

import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-11-06T14:56:23.883+05:30")

@Api(value = "Employee", description = "the Employee API")
public interface EmployeeApi {

    @ApiOperation(value = "Adds employee record in database", notes = "Adds employee record in database", response = String.class, tags={ "employee", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = String.class),
        @ApiResponse(code = 200, message = "successful operation", response = Void.class) })
    
    @RequestMapping(value = "/addemployee",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<String> addEmployee(@ApiParam(value = "Employee Object" ,required=true )  @Valid @RequestBody Employee body) {
        // do some magic!
        return new ResponseEntity<String>(HttpStatus.OK);
    }


    @ApiOperation(value = "Find employee by ID", notes = "Returns a single employee details", response = Employee.class, tags={ "employee", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Employee.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied", response = Void.class),
        @ApiResponse(code = 404, message = "Employee not found", response = Void.class) })
    
    @RequestMapping(value = "/employee/{empId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Employee> getEmployeeById(@ApiParam(value = "ID of employee to return",required=true ) @PathVariable("empId") Integer empId) {
        // do some magic!
        return new ResponseEntity<Employee>(HttpStatus.OK);
    }

}
